{"version":3,"sources":["grid/omega.es6.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;kCAES,0BAA0B;;;;kCAC1B,0BAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8ChD,IAAI,KAAK,GAAG,SAAR,KAAK,CAAI,KAAK,EAAE,SAAS,EAA0B;MAAxB,OAAO;;AACpC,WAAS,GAAG,SAAS,IAAI,OAAO,CAAC,oBAAoB,CAAC;;AAEtD,MAAI,UAAU,GAAG,gCAAU,YAAY,CAAC,SAAS,CAAC,CAAC;AACnD,MAAI,CAAC,KAAK,EAAE;AACV,2CACa,UAAU,CAAC,SAAS,EAAK,CAAC,EACrC;GACH,MAAM,IAAI,KAAK,KAAK,MAAM,EAAE;AAC3B,WAAO;AACL,oBAAc,kCACD,UAAU,CAAC,SAAS,EAAK,CAAC,CACtC;KACF,CAAC;GACH,MAAM,IAAI,KAAK,EAAE;AAChB,QAAI,MAAM,wCACQ,KAAK,wCACR,UAAU,CAAC,SAAS,EAAK,CAAC,EAExC,CAAC;;AAEF,QAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AAC3B,YAAM,kBAAgB,KAAK,WAAQ,GAAG;AACpC,eAAO,EAAE,UAAU,CAAC,iBAAiB;OACtC,CAAC;KACH;;AAED,WAAO,MAAM,CAAC;GACf;CACF,CAAC;;qBAEa,KAAK","file":"grid/omega.es6.js","sourcesContent":["'use strict';\n\nimport variables from '../core/variables.es6.js';\nimport functions from '../core/functions.es6.js';\n\n// Removes the element's gutter margin, regardless of its position in the grid hierarchy or display property.\n// It can target a specific element, or every `nth-child` occurrence. Works only with `block` layouts.\n//\n// @query\n//   Supported arguments are `nth-child` selectors (targets a specific pseudo element) and `auto` (targets `last-child`).\n//\n//   When passed an `nth-child` argument of type `*n` with `block` display, the omega mixin automatically\n//   adds a clear to the `*n+1` th element.\n//\n//   Note that composite arguments such as `2n+1` do not support this feature.\n//\n// @direction\n//  Sets the layout direction. Can be `LTR` (left-to-right) or `RTL` (right-to-left).\n//\n// @example - LESS Usage\n//   .element {\n//     @mixin omega;\n//   }\n//\n//   .nth-element {\n//     @mixin omega 4n;\n//   }\n//\n//   .auto-element {\n//     @mixin omega auto;\n//   }\n//\n// @example - CSS Output\n//   .element {\n//     margin-right: 0;\n//   }\n//\n//   .nth-element:nth-child(4n) {\n//     margin-right: 0;\n//   }\n//\n//   .nth-element:nth-child(4n+1) {\n//     clear: left;\n//   }\n//\n//   .auto-element:last-child {\n//     margin-right: 0;\n//   }\n\nlet omega = (query, direction, options = variables) => {\n  direction = direction || options.neatDefaultDirection;\n\n  var directions = functions.getDirection(direction);\n  if (!query) {\n    return {\n      [`margin-${directions.direction}`]: 0\n    };\n  } else if (query === 'auto') {\n    return {\n      '&:last-child': {\n        [`margin-${directions.direction}`]: 0\n      }\n    };\n  } else if (query) {\n    let result = {\n      [`&:nth-child(${query})`]: {\n        [`margin-${directions.direction}`]: 0\n      }\n    };\n\n    if (query.indexOf('n') >= 0) {\n      result[`&:nth-child(${query} + 1)`] = {\n        'clear': directions.oppositeDirection\n      };\n    }\n\n    return result;\n  }\n};\n\nexport default omega;\n"],"sourceRoot":"/source/"}