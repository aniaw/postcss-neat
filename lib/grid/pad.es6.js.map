{"version":3,"sources":["grid/pad.es6.js"],"names":["pad","padding","options","variables","media","columnGutter","functions","percentage","flexGutter","neatGridColumns","Media","Desktop","neatColumnWidth","neatGutterWidth","parts","Array","isArray","split","length","push","reduce","aggr","value","join"],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,MAAM,SAANA,GAAM,GAAqD;AAAA,MAApDC,OAAoD,uEAA1C,SAA0C;AAAA,MAA/BC,OAA+B,uEAArBC,qBAAqB;AAAA,MAAVC,KAAU;;AAC7D,MAAIC,eAAeC,sBAAUC,UAAV,CACjBD,sBAAUE,UAAV,CACGJ,QAAQF,QAAQE,KAAR,EAAeK,eAAvB,GAAyCP,QAAQQ,qBAAMC,OAAd,EAAuBF,eADnE,EAEGL,QAAQF,QAAQE,KAAR,EAAeQ,eAAvB,GAAyCV,QAAQQ,qBAAMC,OAAd,EAAuBC,eAFnE,EAGGR,QAAQF,QAAQE,KAAR,EAAeS,eAAvB,GAAyCX,QAAQQ,qBAAMC,OAAd,EAAuBE,eAHnE,CADiB,CAAnB;AAOA,MAAIC,QAAQC,MAAMC,OAAN,CAAcf,OAAd,IAAyBA,OAAzB,GAAmCA,QAAQgB,KAAR,CAAc,GAAd,CAA/C;;AAEA,MAAI,CAACH,MAAMI,MAAX,EAAmB;AACjBJ,UAAMK,IAAN,CAAW,SAAX;AACD;;AAED,SAAO;AACL,eAAWL,MAAMM,MAAN,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACvCD,WAAKF,IAAL,CAAUG,UAAU,SAAV,GAAsBjB,YAAtB,GAAqCiB,KAA/C;AACA,aAAOD,IAAP;AACD,KAHU,EAGR,EAHQ,EAGJE,IAHI,CAGC,GAHD;AADN,GAAP;AAMD,CApBD;;kBAsBevB,G","file":"grid/pad.es6.js","sourcesContent":["'use strict';\n\nimport variables from '../core/variables.es6.js';\nimport functions from '../core/functions.es6.js';\nimport Media from '../core/mediaTypes.es6';\n\n// Adds padding to the element.\n//\n// @padding\n//   A list of padding value(s) to use. Passing `default` in the list will result\n//    in using the gutter width as a padding value.\n//\n// @example - PostCSS Usage\n//   .element {\n//     @neat-pad 30px -20px 10px default;\n//   }\n//\n// @example - CSS Output\n//   .element {\n//     padding: 30px -20px 10px 2.3576516%;\n//   }\n//\n\nlet pad = (padding = 'default', options = variables, media) => {\n  let columnGutter = functions.percentage(\n    functions.flexGutter(\n      (media ? options[media].neatGridColumns : options[Media.Desktop].neatGridColumns),\n      (media ? options[media].neatColumnWidth : options[Media.Desktop].neatColumnWidth),\n      (media ? options[media].neatGutterWidth : options[Media.Desktop].neatGutterWidth),\n    )\n  );\n  let parts = Array.isArray(padding) ? padding : padding.split(' ');\n\n  if (!parts.length) {\n    parts.push('default');\n  }\n\n  return {\n    'padding': parts.reduce((aggr, value) => {\n      aggr.push(value === 'default' ? columnGutter : value);\n      return aggr;\n    }, []).join(' ')\n  };\n};\n\nexport default pad;\n"],"sourceRoot":"/source/"}