{"version":3,"sources":["grid/row.es6.js"],"names":["row","display","options","variables","media","neatDefaultDisplay","Media","Desktop","Object","assign","functions","clearfix"],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,MAAM,SAANA,GAAM,CAACC,OAAD,EAAyC;AAAA,MAA/BC,OAA+B,uEAArBC,qBAAqB;AAAA,MAAVC,KAAU;;AACjDH,YAAUA,YAAYG,QAAQF,QAAQE,KAAR,EAAeC,kBAAvB,GAA4CH,QAAQI,qBAAMC,OAAd,EAAuBF,kBAA/E,CAAV;;AAEA,MAAIJ,YAAY,OAAhB,EAAyB;AACvB,WAAOO,OAAOC,MAAP,CAAc;AACnB,iBAAW,OADQ;AAEnB,sBAAgB;AAFG,KAAd,EAGJ,6BAHI,CAAP;AAID,GALD,MAKO;AACL,WAAOD,OAAOC,MAAP,CAAc;AACnB,iBAAW;AADQ,KAAd,EAEJC,sBAAUC,QAAV,EAFI,CAAP;AAGD;AACF,CAbD;;kBAeeX,G","file":"grid/row.es6.js","sourcesContent":["'use strict';\n\nimport variables from '../core/variables.es6.js';\nimport functions from '../core/functions.es6.js';\nimport fillParent from './fill-parent.es6.js';\nimport Media from '../core/mediaTypes.es6';\n\n// Designates the element as a row of columns in the grid layout. It clears the floats on the element and\n// sets its display property. Rows can't be nested, but there can be more than one row element\n// with different display properties per layout.\n//\n// @display\n//  Sets the display property of the element and the display context that\n//  will be used by its children. Can be `block` or `table`.\n//\n// @direction\n//  Sets the layout direction. Can be `LTR` (left-to-right) or `RTL` (right-to-left).\n//\n// @example - PostCSS Usage\n//  .element {\n//    @neat-row;\n//  }\n//\n// @example - CSS Output\n//  .element {\n//    *zoom: 1;\n//    display: block;\n//  }\n//\n// .element:before,\n// .element:after {\n//   content: \" \";\n//   display: table;\n// }\n//\n// .element:after {\n//   clear: both;\n// }\n//\n\nlet row = (display, options = variables, media) => {\n  display = display || (media ? options[media].neatDefaultDisplay : options[Media.Desktop].neatDefaultDisplay);\n  \n  if (display === 'table') {\n    return Object.assign({\n      'display': 'table',\n      'table-layout': 'fixed'\n    }, fillParent());\n  } else {\n    return Object.assign({\n      'display': 'block'\n    }, functions.clearfix());\n  }\n};\n\nexport default row;\n"],"sourceRoot":"/source/"}