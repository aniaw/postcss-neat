{"version":3,"sources":["core/functions.es6.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;AAEb,IAAI,SAAS,GAAG;;AAEd,YAAU,EAAA,sBAAY;QAAX,KAAK,yDAAG,CAAC;;AAClB,SAAK,GAAG,CAAC,KAAK,CAAC;AACf,YAAU,KAAK,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAA,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAA,OAAI;GAC5D;;;AAGD,UAAQ,EAAA,oBAAG;AACT,WAAO;AACL,aAAO,EAAE,CAAC;AACV,yBAAmB,EAAE;AACnB,iBAAS,EAAE,KAAK;AAChB,iBAAS,EAAE,OAAO;OACnB;AACD,eAAS,EAAE;AACT,eAAO,EAAE,MAAM;OAChB;KACF,CAAC;GACH;CACF,CAAC;;AAEF,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;;;AAGnC,cAAY,EAAA,sBAAC,MAAM,EAAE;AACnB,WAAO;AACL,eAAS,EAAE,MAAM,KAAK,KAAK,GAAG,OAAO,GAAG,MAAM;AAC9C,uBAAiB,EAAE,MAAM,KAAK,KAAK,GAAG,MAAM,GAAG,OAAO;KACvD,CAAC;GACH;;;AAGD,WAAS,EAAA,mBAAC,OAAO,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE;AACnD,WAAO,GAAG,CAAC,OAAO,CAAC;AACnB,oBAAgB,GAAG,CAAC,gBAAgB,CAAC;AACrC,UAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACnC,UAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;AAEnC,QAAI,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,CAAC,OAAO,GAAG,CAAC,CAAA,GAAI,MAAM,CAAC;AACzD,QAAI,iBAAiB,GAAG,gBAAgB,GAAG,MAAM,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAA,GAAI,MAAM,CAAC;;AAEpF,WAAO,QAAQ,GAAG,iBAAiB,CAAC;GACrC;;;AAGD,YAAU,EAAA,oBAAC,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE;AAC3C,oBAAgB,GAAG,CAAC,gBAAgB,CAAC;AACrC,UAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACnC,UAAM,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;;AAEnC,QAAI,iBAAiB,GAAG,gBAAgB,GAAG,MAAM,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAA,GAAI,MAAM,CAAC;;AAEpF,WAAO,MAAM,GAAG,iBAAiB,CAAC;GACnC;CACF,CAAC,CAAC;;qBAEY,SAAS","file":"core/functions.es6.js","sourcesContent":["'use strict';\n\nlet functions = {\n  // Convert to percentage\n  percentage(value = 0) {\n    value = +value;\n    return `${value <= 1 ? (value * 100).toFixed(8) : value}%`;\n  },\n\n  // Simple clearfix\n  clearfix() {\n    return {\n      '*zoom': 1,\n      '&:before, &:after': {\n        'content': '\" \"',\n        'display': 'table'\n      },\n      '&:after': {\n        'clear': 'both'\n      }\n    };\n  }\n};\n\nfunctions = Object.assign(functions, {\n  // Sets layout direction and layout opposite direction to `@direction`\n  // and `@opposite-direction` accordingly.\n  getDirection(layout) {\n    return {\n      direction: layout === 'LTR' ? 'right' : 'left',\n      oppositeDirection: layout === 'LTR' ? 'left' : 'right'\n    };\n  },\n\n  // Sets neat grid column's width to `@column-width`.\n  flexWidth(columns, containerColumns, column, gutter) {\n    columns = +columns;\n    containerColumns = +containerColumns;\n    column = +column.replace('em', '');\n    gutter = +gutter.replace('em', '');\n\n    var tmpWidth = columns * column + (columns - 1) * gutter;\n    var tmpContainerWidth = containerColumns * column + (containerColumns - 1) * gutter;\n\n    return tmpWidth / tmpContainerWidth; // columnWidth\n  },\n\n  // Sets neat grid column's gutter (the white space between two columns) to `@column-gutter`.\n  flexGutter(containerColumns, column, gutter) {\n    containerColumns = +containerColumns;\n    column = +column.replace('em', '');\n    gutter = +gutter.replace('em', '');\n\n    var tmpContainerWidth = containerColumns * column + (containerColumns - 1) * gutter;\n\n    return gutter / tmpContainerWidth; // columnGutter\n  }\n});\n\nexport default functions;\n"],"sourceRoot":"/source/"}