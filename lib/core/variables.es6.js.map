{"version":3,"sources":["core/variables.es6.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;AAEb,IAAI,SAAS,GAAG;AACd,eAAa,EAAE,CAAC;;;AAGhB,oBAAkB,EAAE,OAAO;;;AAG3B,sBAAoB,EAAE,KAAK;;;AAG3B,iBAAe,EAAE,EAAE;;;AAGnB,iBAAe,EAAE,KAAK;CACvB,CAAC;;;AAGF,SAAS,CAAC,eAAe,GAAG,CAAC,AAAC,AAAC,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC,eAAe,GAAI,SAAS,CAAC,eAAe,GAAI,SAAS,CAAC,eAAe,CAAA,CAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;;;AAGhK,SAAS,CAAC,eAAe,GAAG,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC,eAAe,CAAA,CAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;;;AAGpG,SAAS,CAAC,YAAY,GAAG,CAAC,AAAC,IAAI,GAAG,EAAE,GAAI,SAAS,CAAC,aAAa,CAAA,CAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;;qBAEpE,SAAS","file":"core/variables.es6.js","sourcesContent":["'use strict';\n\nlet variables = {\n  defaultEmSize: 1,\n\n  // Sets the default display mode. Can be `block`, `table` or `block-collapse`.\n  neatDefaultDisplay: 'block',\n\n  // Sets the default layout direction of the grid. Can be `LTR` or `RTL`.\n  neatDefaultDirection: 'LTR',\n\n  // Sets the total number of columns in the grid. Its value can be overridden inside a mixin using the `@container-columns` variable.\n  neatGridColumns: 12,\n\n  // Sets the golden ratio value.\n  neatGoldenRatio: 1.618\n};\n\n// Sets the relative width of a single grid column. The unit used should be the same one used to define `@neat-gutter-width`.\nvariables.neatColumnWidth = (((variables.defaultEmSize * variables.neatGoldenRatio) * variables.neatGoldenRatio) * variables.neatGoldenRatio).toString() + 'em';\n\n// Sets the relative width of a single grid gutter. The unit used should be the same one used to define `@neat-column-width`.\nvariables.neatGutterWidth = (variables.defaultEmSize * variables.neatGoldenRatio).toString() + 'em';\n\n// Sets the max-width property of the element that includes `outer-container()`.\nvariables.neatMaxWidth = ((1024 / 16) * variables.defaultEmSize).toString() + 'em';\n\nexport default variables;\n"],"sourceRoot":"/source/"}