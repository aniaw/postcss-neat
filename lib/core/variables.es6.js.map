{"version":3,"sources":["core/variables.es6.js"],"names":["locals","defaultEmSize","goldenRatio","variables","desktop","neatDefaultDisplay","neatDefaultDirection","neatElementColumns","neatGridColumns","neatColumnWidth","toString","neatGutterWidth","neatMaxWidth","debugGridColor","debugGridLocation","tablet","mobile"],"mappings":"AAAA;;;;;AAEA,IAAMA,SAAS;AACbC,iBAAe,CADF;AAEbC,eAAa;AAFA,CAAf;;AAKA,IAAIC,YAAY;AACdC,WAAU;AACR;AACAC,wBAAoB,OAFZ;;AAIR;AACAC,0BAAsB,KALd;;AAOR;AACAC,wBAAoB,CARZ;;AAUR;AACAC,qBAAiB,EAXT;;AAaR;AACAC,qBAAiB,CAAGT,OAAOC,aAAP,GAAuBD,OAAOE,WAA/B,GAA8CF,OAAOE,WAAtD,GAAqEF,OAAOE,WAA7E,EAA0FQ,QAA1F,KAAuG,IAdhH;;AAgBR;AACAC,qBAAiB,CAACX,OAAOC,aAAP,GAAuBD,OAAOE,WAA/B,EAA4CQ,QAA5C,KAAyD,IAjBlE;;AAmBR;AACAE,kBAAc,CAAE,OAAO,EAAR,GAAcZ,OAAOC,aAAtB,EAAqCS,QAArC,KAAkD,IApBxD;;AAsBR;AACAG,oBAAgB,SAvBR;;AAyBR;AACAC,uBAAmB;AA1BX,GADI;;AA8BdC,UAAQ;AACN;AACAV,wBAAoB,OAFd;;AAIN;AACAC,0BAAsB,KALhB;;AAON;AACAC,wBAAoB,CARd;;AAUN;AACAC,qBAAiB,EAXX;;AAaN;AACAC,qBAAiB,CAAGT,OAAOC,aAAP,GAAuBD,OAAOE,WAA/B,GAA8CF,OAAOE,WAAtD,GAAqEF,OAAOE,WAA7E,EAA0FQ,QAA1F,KAAuG,IAdlH;;AAgBN;AACAC,qBAAiB,CAACX,OAAOC,aAAP,GAAuBD,OAAOE,WAA/B,EAA4CQ,QAA5C,KAAyD,IAjBpE;;AAmBN;AACAE,kBAAc,CAAE,OAAO,EAAR,GAAcZ,OAAOC,aAAtB,EAAqCS,QAArC,KAAkD,IApB1D;;AAsBN;AACAG,oBAAgB,SAvBV;;AAyBN;AACAC,uBAAmB;AA1Bb,GA9BM;;AA2DdE,UAAQ;AACN;AACAX,wBAAoB,OAFd;;AAIN;AACAC,0BAAsB,KALhB;;AAON;AACAC,wBAAoB,CARd;;AAUN;AACAC,qBAAiB,EAXX;;AAaN;AACAC,qBAAiB,CAAGT,OAAOC,aAAP,GAAuBD,OAAOE,WAA/B,GAA8CF,OAAOE,WAAtD,GAAqEF,OAAOE,WAA7E,EAA0FQ,QAA1F,KAAuG,IAdlH;;AAgBN;AACAC,qBAAiB,CAACX,OAAOC,aAAP,GAAuBD,OAAOE,WAA/B,EAA4CQ,QAA5C,KAAyD,IAjBpE;;AAmBN;AACAE,kBAAc,CAAE,OAAO,EAAR,GAAcZ,OAAOC,aAAtB,EAAqCS,QAArC,KAAkD,IApB1D;;AAsBN;AACAG,oBAAgB,SAvBV;;AAyBN;AACAC,uBAAmB;AA1Bb;;AA3DM,CAAhB;;kBA0FeX,S","file":"core/variables.es6.js","sourcesContent":["'use strict';\n\nconst locals = {\n  defaultEmSize: 1,\n  goldenRatio: 1.618\n};\n\nlet variables = {\n  desktop : {\n    // Sets the default display mode. Can be `block`, `table` or `block-collapse`.\n    neatDefaultDisplay: 'block',\n\n    // Sets the default layout direction of the grid. Can be `LTR` or `RTL`.\n    neatDefaultDirection: 'LTR',\n\n    // Sets the number of columns the element spans. Its value can be overridden inside a mixin using the `@columns` variable.\n    neatElementColumns: 1,\n\n    // Sets the total number of columns in the grid. Its value can be overridden inside a mixin using the `@container-columns` variable.\n    neatGridColumns: 12,\n\n    // Sets the relative width of a single grid column. The unit used should be the same one used to define `@neat-gutter-width`.\n    neatColumnWidth: (((locals.defaultEmSize * locals.goldenRatio) * locals.goldenRatio) * locals.goldenRatio).toString() + 'em',\n\n    // Sets the relative width of a single grid gutter. The unit used should be the same one used to define `@neat-column-width`.\n    neatGutterWidth: (locals.defaultEmSize * locals.goldenRatio).toString() + 'em',\n\n    // Sets the max-width property of the element that includes `@neat-outer-container`.\n    neatMaxWidth: ((1024 / 16) * locals.defaultEmSize).toString() + 'em',\n\n    // Sets the background color for the debugging grid.\n    debugGridColor: '#ecf0f1',\n\n    // Sets the default location of the debugging grid.\n    debugGridLocation: 'after'\n  },\n  \n  tablet: {\n    // Sets the default display mode. Can be `block`, `table` or `block-collapse`.\n    neatDefaultDisplay: 'block',\n\n    // Sets the default layout direction of the grid. Can be `LTR` or `RTL`.\n    neatDefaultDirection: 'LTR',\n\n    // Sets the number of columns the element spans. Its value can be overridden inside a mixin using the `@columns` variable.\n    neatElementColumns: 1,\n\n    // Sets the total number of columns in the grid. Its value can be overridden inside a mixin using the `@container-columns` variable.\n    neatGridColumns: 12,\n\n    // Sets the relative width of a single grid column. The unit used should be the same one used to define `@neat-gutter-width`.\n    neatColumnWidth: (((locals.defaultEmSize * locals.goldenRatio) * locals.goldenRatio) * locals.goldenRatio).toString() + 'em',\n\n    // Sets the relative width of a single grid gutter. The unit used should be the same one used to define `@neat-column-width`.\n    neatGutterWidth: (locals.defaultEmSize * locals.goldenRatio).toString() + 'em',\n\n    // Sets the max-width property of the element that includes `@neat-outer-container`.\n    neatMaxWidth: ((1024 / 16) * locals.defaultEmSize).toString() + 'em',\n\n    // Sets the background color for the debugging grid.\n    debugGridColor: '#ecf0f1',\n\n    // Sets the default location of the debugging grid.\n    debugGridLocation: 'after'\n  },\n  \n  mobile: {\n    // Sets the default display mode. Can be `block`, `table` or `block-collapse`.\n    neatDefaultDisplay: 'block',\n\n    // Sets the default layout direction of the grid. Can be `LTR` or `RTL`.\n    neatDefaultDirection: 'LTR',\n\n    // Sets the number of columns the element spans. Its value can be overridden inside a mixin using the `@columns` variable.\n    neatElementColumns: 1,\n\n    // Sets the total number of columns in the grid. Its value can be overridden inside a mixin using the `@container-columns` variable.\n    neatGridColumns: 12,\n\n    // Sets the relative width of a single grid column. The unit used should be the same one used to define `@neat-gutter-width`.\n    neatColumnWidth: (((locals.defaultEmSize * locals.goldenRatio) * locals.goldenRatio) * locals.goldenRatio).toString() + 'em',\n\n    // Sets the relative width of a single grid gutter. The unit used should be the same one used to define `@neat-column-width`.\n    neatGutterWidth: (locals.defaultEmSize * locals.goldenRatio).toString() + 'em',\n\n    // Sets the max-width property of the element that includes `@neat-outer-container`.\n    neatMaxWidth: ((1024 / 16) * locals.defaultEmSize).toString() + 'em',\n\n    // Sets the background color for the debugging grid.\n    debugGridColor: '#ecf0f1',\n\n    // Sets the default location of the debugging grid.\n    debugGridLocation: 'after'\n  }\n\n};\n\nexport default variables;\n\n\n"],"sourceRoot":"/source/"}