{"version":3,"sources":["core/variables.es6.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;AAEb,IAAM,MAAM,GAAG;AACb,eAAa,EAAE,CAAC;AAChB,aAAW,EAAE,KAAK;CACnB,CAAC;;AAEF,IAAI,SAAS,GAAG;;AAEd,oBAAkB,EAAE,OAAO;;;AAG3B,sBAAoB,EAAE,KAAK;;;AAG3B,iBAAe,EAAE,EAAE;;;AAGnB,iBAAe,EAAE,CAAC,AAAC,AAAC,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,WAAW,GAAI,MAAM,CAAC,WAAW,GAAI,MAAM,CAAC,WAAW,CAAA,CAAE,QAAQ,EAAE,GAAG,IAAI;;;AAG5H,iBAAe,EAAE,CAAC,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,WAAW,CAAA,CAAE,QAAQ,EAAE,GAAG,IAAI;;;AAG9E,cAAY,EAAE,CAAC,AAAC,IAAI,GAAG,EAAE,GAAI,MAAM,CAAC,aAAa,CAAA,CAAE,QAAQ,EAAE,GAAG,IAAI;;;AAGpE,gBAAc,EAAE,SAAS;CAC1B,CAAC;;qBAEa,SAAS","file":"core/variables.es6.js","sourcesContent":["'use strict';\n\nconst locals = {\n  defaultEmSize: 1,\n  goldenRatio: 1.618\n};\n\nlet variables = {\n  // Sets the default display mode. Can be `block`, `table` or `block-collapse`.\n  neatDefaultDisplay: 'block',\n\n  // Sets the default layout direction of the grid. Can be `LTR` or `RTL`.\n  neatDefaultDirection: 'LTR',\n\n  // Sets the total number of columns in the grid. Its value can be overridden inside a mixin using the `@container-columns` variable.\n  neatGridColumns: 12,\n\n  // Sets the relative width of a single grid column. The unit used should be the same one used to define `@neat-gutter-width`.\n  neatColumnWidth: (((locals.defaultEmSize * locals.goldenRatio) * locals.goldenRatio) * locals.goldenRatio).toString() + 'em',\n\n  // Sets the relative width of a single grid gutter. The unit used should be the same one used to define `@neat-column-width`.\n  neatGutterWidth: (locals.defaultEmSize * locals.goldenRatio).toString() + 'em',\n\n  // Sets the max-width property of the element that includes `outer-container()`.\n  neatMaxWidth: ((1024 / 16) * locals.defaultEmSize).toString() + 'em',\n\n  // Sets the background color for the debugging grid.\n  debugGridColor: '#ecf0f1'\n};\n\nexport default variables;\n"],"sourceRoot":"/source/"}